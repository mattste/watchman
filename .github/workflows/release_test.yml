# @generated by generate-release-yml.rs
---
name: release-test
"on":
  - push
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      release: "${{ steps.info.outputs.name }}"
      upload_url: "${{ steps.create_release.outputs.upload_url }}"
    steps:
      - name: Prepare release info
        id: info
        env:
          TAG: "${{ github.ref }}"
        run: 'python -c "print(''::set-output name=name::'' + ''$TAG''.lstrip(''refs/tags/''))"'
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          tag_name: "${{ github.ref }}"
          release_name: "${{ github.ref }}"
  docker-ubuntu-22-aarch64:
    runs-on: macos-13-xlarge
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: "."
          build-args: UBUNTU_VERSION=22.04
          file: watchman/build/package/ubuntu-env/Dockerfile
          push: true

          tags: "${{ format('ghcr.io/{0}/watchman-build-env-ubuntu-22:latest', github.repository) }}"
  clone-build-package-ubuntu-22-aarch64:
    needs:
      - prepare
      - docker-ubuntu-22-aarch64
    runs-on: macos-13-xlarge
    container:
      image: "${{ format('ghcr.io/{0}/watchman-build-env-ubuntu-22:latest', github.repository) }}"
    steps:
      - name: Fix HOME
        run: echo HOME=/root >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install system dependencies
        run: "./install-system-packages.sh"
      - name: Fix dubious ownership
        run: git config --global --add safe.directory /__w/watchman/watchman
      - name: Build Watchman binaries
        run: "./autogen.sh"
      - name: Make .deb
        env:
          UBUNTU_VERSION: "22.04"
        run: "./watchman/build/package/make-deb.sh"
      - name: Upload .deb
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        uses: actions/upload-release-asset@v1
        with:
          upload_url: "${{ needs.prepare.outputs.upload_url }}"
          asset_path: /_debs/watchman.deb
          asset_name: "watchman_ubuntu22.04_${{ needs.prepare.outputs.release }}.deb"
          asset_content_type: application/x-deb
